generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model biases {
  id           Int           @id @default(autoincrement())
  userid       Int
  name         String
  nickname     String
  birthdate    DateTime      @db.Date
  affiliations String
  imageurl     String        @db.VarChar(2048)
  users        users         @relation(fields: [userid], references: [id], onDelete: NoAction, onUpdate: NoAction)
  facts        facts[]
  links        links[]
  memories     memories[]
  my_thoughts  my_thoughts[]
  quotes       quotes[]
}

model facts {
  id     Int      @id @default(autoincrement())
  biasid Int
  fact   String
  date   DateTime @db.Date
  biases biases   @relation(fields: [biasid], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model links {
  id     Int    @id @default(autoincrement())
  biasid Int
  title  String
  site   String
  url    String @db.VarChar(2048)
  tag    String
  biases biases @relation(fields: [biasid], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model memories {
  id       Int      @id @default(autoincrement())
  biasid   Int
  title    String
  date     DateTime @db.Date
  memory   String
  feelings String[]
  url1     String?  @db.VarChar(2048)
  url2     String?  @db.VarChar(2048)
  url3     String?  @db.VarChar(2048)
  biases   biases   @relation(fields: [biasid], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model my_thoughts {
  id       Int      @id @default(autoincrement())
  biasid   Int
  title    String
  note     String   @db.VarChar(350)
  imageurl String?  @db.VarChar(2048)
  date     DateTime @db.Date
  biases   biases   @relation(fields: [biasid], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model quotes {
  id       Int       @id @default(autoincrement())
  biasid   Int
  quote    String
  context  String
  imageurl String?   @db.VarChar(2048)
  url      String?   @db.VarChar(2048)
  date     DateTime? @db.Date
  tag      String
  biases   biases    @relation(fields: [biasid], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model sessions {
  id     Int    @id @default(autoincrement())
  userid Int    @unique
  token  String @unique
  users  users  @relation(fields: [userid], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id       Int       @id @default(autoincrement())
  nickname String    @unique
  imageurl String    @db.VarChar(2048)
  email    String    @unique @db.VarChar(255)
  password String?   @db.VarChar(255)
  biases   biases[]
  sessions sessions?
}
